MOD_DIR="${MODS_DIR}/extras"

MOD_LOCAL_GSM="${MOD_DIR}/LocalGSMAndroid.mk"
MOD_LOCAL_GSM_DEST="${ANDROID_ROOT}/external/localgsmlocation"
MOD_LOCAL_WIFI="${MOD_DIR}/LocalWIFIAndroid.mk"
MOD_LOCAL_WIFI_DEST="${ANDROID_ROOT}/external/localwifilocation"
MOD_GEOCODE="${MOD_DIR}/GeocodingAndroid.mk"
MOD_GEOCODE_DEST="${ANDROID_ROOT}/external/NominatimGeocoderBackend"

GEMINI_VENDOR="${ANDROID_ROOT}/vendor/xiaomi/gemini"
VENDOR_MK="${GEMINI_VENDOR}/gemini-vendor.mk"
ANDROID_MK="${GEMINI_VENDOR}/Android.mk"

append()
{
	echo "${@}"
	echo "${@}" >> "${ANDROID_MK}"
}

vappend()
{
	echo "${@}"
	echo "${@}" >> "${VENDOR_MK}"
}

out "Install native Android.mk [${MOD_LOCAL_GSM}] to [${MOD_LOCAL_GSM_DEST}/Android.mk]"
cp -v "${MOD_LOCAL_GSM}" "${MOD_LOCAL_GSM_DEST}/Android.mk"

out "Install native Android.mk [${MOD_LOCAL_WIFI}] to [${MOD_LOCAL_WIFI_DEST}/Android.mk]"
cp -v "${MOD_LOCAL_WIFI}" "${MOD_LOCAL_WIFI_DEST}/Android.mk"

out "Install native Android.mk [${MOD_GEOCODE}] to [${MOD_GEOCODE_DEST}/Android.mk]"
cp -v "${MOD_GEOCODE}" "${MOD_GEOCODE_DEST}/Android.mk"

vappend()
{
	echo "${@}"
	echo "${@}" >> "${GEMINI_VENDOR}"
}

vappend ''
vappend 'PRODUCT_PACKAGES += busybox'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += YahooWeatherProvider'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += Protips'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += GmsCore'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += GsfProxy'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += NetworkLocation'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += MicroGUiTools'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += UnifiedNlp'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += UnifiedNlpApi'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += NominatimGeocoderBackend'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += LocalGSMLocation'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += LocalWifiLocation'
vappend ''

vappend ''
vappend 'PRODUCT_PACKAGES += F-Droid'
vappend ''


#

# # PRODUCT_PACKAGES
# MOD_DIR="${MODS_DIR}/blankstore"
# MOD_APK="${MOD_DIR}/BlankStore.apk"
#
#
# MOD_APP="${GEMINI_VENDOR}/system/app/"
# MOD_APP_APK="com.android.vending.apk"
#
# out "App directory [${MOD_APP}]"
# ! dir_ok "${MOD_APP}" && mkdir -p "${MOD_APP}"
#
# out "Copy Asset [${MOD_APK}]"
# cp -v "${MOD_APK}" "${MOD_APP}/${MOD_APP_APK}"
#
# # out "Backup vendor makefile  [${VENDOR_MK}] to [${MOD_DIR}/gemini-vendor.mk]"
# # cp -v "${VENDOR_MK}" "${MOD_DIR}/gemini-vendor.mk"
# # out "Backup android  makefile  [${ANDROID_MK}] to [${MOD_DIR}/Android.mk]"
# # cp -v "${ANDROID_MK}" "${MOD_DIR}/Android.mk"
#
# append()
# {
# 	echo "${@}"
# 	echo "${@}" >> "${ANDROID_MK}"
# }
#
# append ''
# append 'ifeq ($(TARGET_DEVICE),gemini)'
# append ''
# append 'include $(CLEAR_VARS)'
# append 'LOCAL_MODULE := com.android.vending'
# append 'LOCAL_MODULE_OWNER := xiaomi'
# append 'LOCAL_SRC_FILES := system/app/com.android.vending.apk'
# append 'LOCAL_CERTIFICATE := platform'
# append 'LOCAL_MODULE_TAGS := optional'
# append 'LOCAL_MODULE_CLASS := APPS'
# append 'LOCAL_MODULE_SUFFIX := .apk'
# append 'LOCAL_PROPRIETARY_MODULE := true'
# append 'LOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/app'
# append 'include $(BUILD_PREBUILT)'
# append ''
# append 'endif'
# append ''
#
# vappend()
# {
# 	echo "${@}"
# 	echo "${@}" >> "${VENDOR_MK}"
# }
#
# vappend ''
# vappend 'PRODUCT_PACKAGES += com.android.vending'
# vappend ''
#
# #
# # LOCAL_PATH:= $(call my-dir)
# # include $(CLEAR_VARS)
# #
# # LOCAL_MODULE_TAGS := optional
# # LOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/app
# #
# # LOCAL_SRC_FILES := $(call all-java-files-under, src)
# #
# # LOCAL_PACKAGE_NAME := LeanbackWidget
# #
# # LOCAL_SDK_VERSION := current
# #
# # include $(BUILD_PACKAGE)
